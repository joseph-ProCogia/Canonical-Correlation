---
title: "Canonical Correlation Analysis"
author: "Joseph Korszun"
format: revealjs
editor: visual
---

------------------------------------------------------------------------

## Canonical Correlation Analysis

::: incremental
-   What is Canonical Correlation Analysis?
-   Defining Canonical Correlations
-   Canonical Variates and Canonical Correlations
-   When to use CCA?
    -   PCA vs CCA
    -   MLR vs CCA
-   An Example (R and Python provided)
-   Summary
-   References
:::

------------------------------------------------------------------------

### What is Canonical Correlation Analysis?

::: incremental
-   Canonical Correlate Analysis (CCA) seeks to identify and quantify associations between two sets of variables.
-   Developed by Harold Hotelling where he was providing an example of relating arithmetic reading speed and arithmetic reading power
-   Focuses on the correlation between the linear combination of variables in one set and the linear combination in another set.
:::

------------------------------------------------------------------------

### Defining Canonical Correlations

::: incremental
-   Determine the pair of linear combinations having the largest correlation
-   Determine the pair of linear combinations having the largest correlation among all pairs uncorrelated with the initially selected pair, and so forth
-   The pairs of linear combinations are called canonical variables
-   Their correlations are called Canonical Correlations
:::

------------------------------------------------------------------------

### When to use CCA?

::: incremental
-   Large Sample Size required
-   Multivariate Normal Distribution assumptions for both data sets of variables
-   Samples can be used from large data sets, but they should be adequate in size
:::

![](Normal%20Distribution.png){fig-align="right"}

------------------------------------------------------------------------

### Canonical Variates and Canonical Correlations

::: incremental
-   We are interested in defining the relationship between two sets of variables
-   Lets say the first set of variables is represented by the random vector (p x 1) $$X^{(1)}$$
-   Lets say the second set of variables is represented by the random vector (q x 1) $$X^{(2)}$$
:::

------------------------------------------------------------------------

### Canonical Variates and Canonical Correlations

$$
\begin{align}
    \text{Assume X(1) is smaller} && X^{(1)} \\
    \text{Such that} && p \le q && \text{and} && X^{(1)} \le X^{(2)} \\
    \text{Let} && E(X^{(1)}) = u^{(1)} && \text{and} && E(X^{(2)}) = u^{(2)}
\end{align}
$$

------------------------------------------------------------------------

### Canonical Variates and Canonical Correlations

-   We consider the X(1) and X(2) jointly here

$$\mathbf{X_{(p+q)~~x~~1)}} = \left[\begin{array}
{rrr}
X_1^{(1)} \\
X_2^{(1)} \\
X_p^{(1)} \\
.....   \\
X_1^{(2)} \\
X_2^{(2)} \\
X_p^{(2)} \\
\end{array}\right]
$$

------------------------------------------------------------------------

### Canonical Variates and Canonical Correlations

-   This has a mean vector of

$$\frac{E(X^{1})}{E(X^{2})} = \frac{u(X^{1})}{u(X^{2})}$$

-   And a covariance matrix of

$$\mathbf{E{(X-u)(X-u)'}} = \left[\begin{array}
{rrr}
X_{p*p}{(11)} && X_{p*q}{(12)}\\
....... && ........   \\
X_{q*p}{(21)} && X_{q*q}{(22)}\\
\end{array}\right]
$$

------------------------------------------------------------------------

### Canonical Variates and Canonical Correlations

::: incremental
-   The covariances between pairs of variables from different sets
    -   One variable from X(1) and one variable from X(2), are contained in X(12)
-   The purpose of this analysis is to summarize the associations between X(1) and X(2) sets
    -   A few carefully chosen covariances (correlations)
:::

------------------------------------------------------------------------

### PCA and MLR

::: incremental
-   PCA - focuses on finding linear combinations that account for the most variance in one dataset
    -   Canonical Correlaton Analysis focuses on two datasets
    
-   MLR - very similar approach to CCA but relationship is known
    -   When one set is considered a response vs one a predictor use MLR
    -   When its not clear on relationship use CCA
:::

------------------------------------------------------------------------

### An Example in R

```{r, echo=FALSE}

# load libraries
library(lme4) # linear mixed-effect modeling
library(CCA) # CCA package
library(CCP) # significance tests for CCA
library(ggplot2) # plotting package

# read in data 
example <- read.csv("CanonicalCorrelationAnalysisData.csv", header = T, sep = ",")

# print 5 rows
head(example)

# Define X and Y data
X = example[,c('PsychTest1', 'PsychTest2', 'YrsEdu', 'IQ', 'HrsTrn', 'HrsWrk')]
Y = example[,c('ClientSat', 'SuperSat', 'ProjCompl')]

# Fit Canonical Correlation Analysis using built-in cancor function
model <- cancor(X,Y)

# Show the model results
print(model)



```

------------------------------------------------------------------------

------------------------------------------------------------------------

### An Example in R

```{r, echo=FALSE}

# Show the Canonical correlations per dimension to decide on the number of dimensions
barplot(model$cor, xlab = "Dimension", ylab = "Canonical correlations", ylim = c(0,1), xlim=c(0,3))


# refit model using canonical correlation function
model2 <- cc(X, Y)

# plot model on scatter plot (Dimensions 1 and 2)
plt.cc(model2, var.label = TRUE)

# plot model on scatter plot (Dimensions 1 and 3)
plt.var(model2, 1, 3, var.label = TRUE)

# plot model on scatter plot (Dimensions 2 and 3)
plt.var(model2, 2, 3, var.label = TRUE)


```

------------------------------------------------------------------------

### An Example in Python

``` python
# import libraries
import pandas as pd
from sklearn.cross_decomposition import CCA

# import the csv file directly from an s3 bucket
example = pd.read_csv('CanonicalCorrelationAnalysisData.csv')

# Split the data in X and Y
X = example[['PsychTest1',  'PsychTest2', 'YrsEdu', 'IQ', 'HrsTrn', 'HrsWrk']]
Y = example[['ClientSat',   'SuperSat', 'ProjCompl']]

# Instantiate the Canonical Correlation Analysis with 2 components
my_cca = CCA(n_components=2)

# Fit the model
my_cca.fit(X, Y)


# Obtain the rotation matrices
xrot = my_cca.x_rotations_
yrot = my_cca.y_rotations_

# Put them together in a numpy matrix
xyrot = np.vstack((xrot,yrot))

nvariables = xyrot.shape[0]

plt.figure(figsize=(15, 15))
plt.xlim((-1,1))
plt.ylim((-1,1))

# Plot an arrow and a text label for each variable
for var_i in range(nvariables):
  x = xyrot[var_i,0]
  y = xyrot[var_i,1]
  
  plt.arrow(0,0,x,y)
  plt.text(x,y,data.columns[i], color='red' if i >= 6 else 'blue')

# show plot
plt.show()
```

------------------------------------------------------------------------

### Summary

::: incremental
-   CCA is used with two sets of variables where respone-predictor relationship is unclear
-   Requires a large amount of data 
-   Maximum combinations of associations between two datasets
:::

------------------------------------------------------------------------

### References

::: non-incremental
-   [Applied Multivariate Statistical Analysis](https://www.amazon.com/Multivariate-Statistical-Analysis-Classics-Statistics/dp/0134995392/ref=sr_1_1?keywords=applied+multivariate+statistical+analysis&qid=1660653698&sprefix=applied+multivari%2Caps%2C296&sr=8-1)
-   [PSU Lecture Material](https://online.stat.psu.edu/stat505/book/export/html/682)
-   [UCLA Lecture Material](https://stats.oarc.ucla.edu/r/dae/canonical-correlation-analysis/#:~:text=Canonical%20correlation%20analysis%20is%20used,are%20multiple%20intercorrelated%20outcome%20variables)
-   [Towards Data Science Article](https://towardsdatascience.com/canonical-correlation-analysis-b1a38847219d)
-   [Medium Article](https://medium.com/analytics-vidhya/canonical-correlation-analysis-cca-in-r-a-non-technical-primer-b67d9bdeb9dd)
-   [AWS Dataset](https://articledatas3.s3.eu-central-1.amazonaws.com/CanonicalCorrelationAnalysisData.csv)
:::

------------------------------------------------------------------------
